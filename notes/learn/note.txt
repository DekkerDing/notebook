
场景
    messageId消息ID设计
        messageId 消息唯一标识
        fromId 消息谁发的
        destId 消息发送给谁的好友消息（userId）群消息（destId）
        messageInfo消息内容
        messageMainType消息类型
            文本消息，图片消息，视频消息，红包消息，通知消息
            好友操作通知，添加好友，删除好友 群消息通知
        messageSubType 用于消息扩展的
        messageTime 消息发送的时间
    消息风暴
    总线风暴
    读扩散 写扩散－---〉群消息
    消息存储
    按需拉取

模块
    manager（用户注册，好友操作，群操作等一些列API操作）
    IM（与app连接，用于接收和发送消息）
    DataTransfer（接收IM推送到Rokcetmq中的用户发送的消息）
    offline（离线服务，比如你发一个消息给你的好友，你好友离线黑屏了,这时候需要推送离线消息告知你好友）

用户发送消息
    APP --> IM --> rocketmq -->Datatransfer消费-->数据全部落入mongodb数据库
                                （发现该消息所属用户离线）-->离线Rocketmq-->Offline消费--> 手机SDK->推送用户通知
                                发消息的时候，好友消息，destId==好友userId精准知道消息属于谁
                                群消息，destId－－（userId，userId2，userId3）知道消息所属用户集合
用户接收消息
APP定时轮询 --> IM --> mongodb去查询消息.

问题点
    推模式的情况下，发送消息的时候，我已经知道消息属于谁，为什么不直接推送，这样及时性不是更好？
        如果这条消息属于群消息，群里有100个人，100个人在线，推送100人qps是100。
        但是如果是1000,100个人那这个qps100000，也就是推模式把系统的可控性交给了用户，系统本身不可控. 系统不稳定。
        定时轮询 --> 每次轮询只能拉40条消息这样系统就是可控的，Qps可控的，10000个用户，每秒轮询一次 qps 就是10000
        也就是说系统qps由在线用户决定．推模式会引发消息风暴和总线风暴。