中介模式原始定义
    中介者对象封装了一组对象之间的交互
    这组对象会将它们的交互委托给中介者对象，而不是直接交互
    解决对象之间直接耦合的问题，避免“一处修改多处”“的连锁反应出现
    在结构上作为中转，解耦两个服务或系统之间的直接耦合关系
    为了更便捷地统一协同对象之间的通信
    中介者会在自身内部分装协调逻辑，并对同类型的对象请求进行统一的处理
    对于一些维护性的旧项目来说，通过引入中间层，能够起到过渡的作用同时也能够逐渐解耦原有的强耦合关系，让系统的扩展性变得更强
结构
    抽象中介者（Mediator)
        定义中介者需要执行的方法操作
    具体中介者（Mediatorlmpl)
        实现抽象中介者定义的方法操作，同时可以包含更多逻辑
    抽象组件类（Component）
        定义组件需要执行的方法操作
    具体组件类
        继承自抽象组件类，实现具体的组件业务逻辑
原理

预期
    系统中对象之间存在复杂的引用关系时
    通过一个中间对象来封装多个类中的共有行为时
    不想生成太多的子类时
    减少对象之间的直接交互，间接解耦过多依赖
    通过新建中间层快速扩展新功能，提升代码扩展性
    不同对象通过中介者进行中转就意味着不再需要显式直接引用对象
    从结构上不再会形成网状结构，而是以某个中介者为中的星型结构这样能极大地降低对象的结构耦合性

资料
    https://www.bilibili.com/video/BV1hY411Y7zR?spm_id_from=333.788.videopod.episodes&vd_source=afc578e8acd436b9b937b4fb9a3c7095&p=31