策略模式原始定义
    定义一系列算法，封装每个算法，并使它们可以互换策略让算法独立于使用它的客户端而变化
    提供良好的代码扩展性
    提供了一种管理多个不同算法策略的办法
    提供使用组合替换继承的办法
    能够降低使用多重条件（if-else）嵌套语句的理解难度
    在运行时动态切换算法，提升代码灵活性
    能在运行时改变代码的算法行为同时给使用者提供一种可以根据情况来选择算法的途径

结构
    上下文信息类（Context）：
        用于存放和执行需要使用的具体策略类以及客户端调用的逻辑
    抽象策略类（Strategy）：
        定义策略的共有方法 如公共接口
    具体策略类（StrategyA等）：
        实现抽象策略类定义的共有方法

原理
    通过上下文信息类作为中心控制单元对不同策略进行调度分配



预期
    系统中需要动态切换几种算法的场景
    使用多重的条件选择语句来实现的业务场景
    只希望客户端选择已经封装好的算法场景而不用关心算法实现细节
    分离使用策略和创建策略的场景

资料
    https://www.bilibili.com/video/BV1hY411Y7zR?spm_id_from=333.788.videopod.episodes&vd_source=afc578e8acd436b9b937b4fb9a3c7095&p=31